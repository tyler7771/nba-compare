{"version":3,"sources":["serviceWorker.js","components/chartsPage/pageHelpers.js","actions/playerActions.js","actions/statsActions.js","components/chartsPage/charts/doughnutCard.jsx","components/chartsPage/doughnutTab.jsx","components/search/searchBar.jsx","actions/searchActions.js","components/chartsPage/searchedPlayerPill.jsx","components/chartsPage/header.jsx","components/chartsPage/charts/lineCard.jsx","components/chartsPage/lineTab.jsx","components/chartsPage/charts/radarCard.jsx","components/chartsPage/radarTab.jsx","components/chartsPage/chartsPage.jsx","components/App.jsx","reducers/orderByHelper.js","reducers/playerReducer.js","reducers/searchReducer.js","reducers/statsReducer.js","reducers/root.js","sagas/player.js","sagas/search.js","sagas/stats.js","sagas/root.js","index.js"],"names":["Boolean","window","location","hostname","match","generateSearchString","players","str","forEach","player","id","getStats","seasonAverages","stats","statsObj","player_id","mapStatsLabel","stat","statsSelectDropdownArr","removePlayer","type","getSeasonAverages","searchString","removePlayerStats","DoughNutCard","shootingStats","Icon","NBAIcons","team","abbreviation","options","tooltips","callbacks","label","tooltipItem","data","percent","index","labels","datasets","Math","round","Col","xs","md","className","icon","faTimesCircle","onClick","first_name","last_name","city","name","position","mapPosition","height_feet","height_inches","backgroundColor","getMainColor","hex","getSecondaryColor","attempt","made","legend","display","mapDispatchtoProps","connect","_","ownProps","isOffenseStats","RadarTab","useState","setShootingStats","useEffect","JSON","stringify","ButtonGroup","size","Button","variant","Row","map","i","state","SearchBar","displayCount","getPlayer","getPlayers","placeholder","onChange","e","target","value","document","getElementById","mapDispatchToProps","paginationCount","search","SearchedPlayerPill","primary","secondary","style","color","Header","LineCard","title","datasetIndex","slice","length","games","game","lineColor","fill","borderColor","LineTab","clearLastTenStats","getLastTenGamesStats","lastTen","setStat","DropdownButton","statEl","Dropdown","Item","RadarCard","scale","ticks","beginAtZero","rgb","ast","blk","fg_pct","fg3_pct","ft_pct","reb","stl","turnover","borderWidth","setIsOffenseStats","ChartsPage","currentPage","setPage","Container","fluid","getPage","App","orderById","arr","sort","a","b","initialState","conference","division","full_name","weight_pounds","PlayerReducer","newData","action","loading","json","filter","SearchReducer","StatsReducer","RootReducer","combineReducers","fetchPlayer","actionWatcher","fetch","then","response","put","takeLatest","fetchPlayers","undefined","fetchAverages","fetchLastTenStats","orderGamesByDate","Date","date","takeEvery","rootSaga","all","SearchActionWatcher","PlayerActionWatcher","StatsActionWatcher","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ab52149b.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","export const generateSearchString = (players) => {\r\n  let str = \"\";\r\n\r\n  players.forEach((player) => {\r\n    str += `&player_ids[]=${player.id}`;\r\n  });\r\n\r\n  return str;\r\n};\r\n\r\nexport const getStats = (id, seasonAverages) => {\r\n  let stats = null;\r\n  seasonAverages.forEach((statsObj) => {\r\n    if (statsObj.player_id === id) {\r\n      stats = statsObj;\r\n    }\r\n  });\r\n\r\n  return stats;\r\n};\r\n\r\nexport const mapStatsLabel = (stat) => {\r\n  switch (stat) {\r\n    case \"ast\":\r\n      return \"Assists\";\r\n    case \"blk\":\r\n      return \"Blocks\";\r\n    case \"dreb\":\r\n      return \"Defensive Rebounds\";\r\n    case \"fg3_pct\":\r\n      return \"3 Point %\";\r\n    case \"fg3a\":\r\n      return \"3 Point Attempts\";\r\n    case \"fg3m\":\r\n      return \"3 Point Makes\";\r\n    case \"fg_pct\":\r\n      return \"Field Goal %\";\r\n    case \"fga\":\r\n      return \"Field Goal Attempts\";\r\n    case \"fgm\":\r\n      return \"Field Goal Makes\";\r\n    case \"ft_pct\":\r\n      return \"Free Throw %\";\r\n    case \"fta\":\r\n      return \"Free Throw Attempts\";\r\n    case \"ftm\":\r\n      return \"Free Throw Makes\";\r\n    case \"oreb\":\r\n      return \"Offensive Rebounds\";\r\n    case \"pf\":\r\n      return \"Personal Fouls\";\r\n    case \"pts\":\r\n      return \"Points\";\r\n    case \"reb\":\r\n      return \"Rebounds\";\r\n    case \"stl\":\r\n      return \"Steals\";\r\n    case \"turnover\":\r\n      return \"Turnovers\";\r\n    default:\r\n      return stat;\r\n  }\r\n};\r\n\r\nexport const statsSelectDropdownArr = [\r\n  \"pts\",\r\n  \"fg3_pct\",\r\n  \"fg3a\",\r\n  \"fg3m\",\r\n  \"fg_pct\",\r\n  \"fga\",\r\n  \"fgm\",\r\n  \"ft_pct\",\r\n  \"fta\",\r\n  \"ftm\",\r\n  \"ast\",\r\n  \"blk\",\r\n  \"stl\",\r\n  \"reb\",\r\n  \"dreb\",\r\n  \"oreb\",\r\n  \"pf\",\r\n  \"turnover\",\r\n];\r\n","export const getPlayer = (id) => ({\r\n  type: \"GET_PLAYER\",\r\n  id,\r\n});\r\n\r\nexport const removePlayer = (id) => ({\r\n  type: \"REMOVE_PLAYER\",\r\n  id,\r\n});\r\n","export const getSeasonAverages = (searchString) => ({\r\n  type: \"GET_SEASON_AVERAGES\",\r\n  searchString,\r\n});\r\n\r\nexport const removePlayerStats = (id) => ({\r\n  type: \"REMOVE_PLAYER_STAT\",\r\n  id,\r\n});\r\n\r\nexport const clearLastTenStats = () => ({\r\n  type: \"CLEAR_LAST_TEN_STATS\",\r\n});\r\n\r\nexport const getLastTenGamesStats = (player) => ({\r\n  type: \"GET_LAST_TEN_STATS\",\r\n  player,\r\n});\r\n","import * as NBAIcons from \"react-nba-logos\";\r\n\r\nimport { getMainColor, getSecondaryColor } from \"nba-color\";\r\n\r\nimport Col from \"react-bootstrap/Col\";\r\nimport { Doughnut } from \"react-chartjs-2\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { faTimesCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { removePlayer } from \"../../../actions/playerActions\";\r\nimport { removePlayerStats } from \"../../../actions/statsActions\";\r\n\r\nlet DoughNutCard = ({ player, stats, shootingStats, removePlayer }) => {\r\n  const Icon = NBAIcons[player.team.abbreviation];\r\n\r\n  const data = () => {\r\n    const color1 = getMainColor(player.team.abbreviation).hex;\r\n    const color2 = getSecondaryColor(player.team.abbreviation).hex;\r\n    const backgroundColor = [color1, color2];\r\n\r\n    const labels = [\"Made\", \"Miss\"];\r\n\r\n    const attempt = stats[`${shootingStats}a`];\r\n    const made = stats[`${shootingStats}m`];\r\n    const miss = attempt - made;\r\n    const data = [made, miss];\r\n\r\n    return {\r\n      labels,\r\n      datasets: [\r\n        {\r\n          data,\r\n          backgroundColor,\r\n        },\r\n      ],\r\n    };\r\n  };\r\n\r\n  const options = {\r\n    tooltips: {\r\n      callbacks: {\r\n        label: (tooltipItem, data) => {\r\n          const percent =\r\n            tooltipItem.index === 0\r\n              ? stats[`${shootingStats}_pct`] * 100\r\n              : 100 - stats[`${shootingStats}_pct`] * 100;\r\n          return `${data.labels[tooltipItem.index]}: ${\r\n            data.datasets[0].data[tooltipItem.index]\r\n          } of ${stats[`${shootingStats}a`]} (${Math.round(percent)}%)`;\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  const mapPosition = (position) => {\r\n    switch (position[0]) {\r\n      case \"C\":\r\n        return \"Center\";\r\n      case \"F\":\r\n        return \"Forward\";\r\n      case \"G\":\r\n        return \"Guard\";\r\n      default:\r\n        return position;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Col xs={12} md={6}>\r\n      <div\r\n        className=\"div\"\r\n        className={`doughnut-card ${!stats ? \"no-stats\" : \"\"}`}\r\n      >\r\n        <FontAwesomeIcon\r\n          icon={faTimesCircle}\r\n          onClick={() => {\r\n            removePlayer(player.id);\r\n            removePlayerStats(player.id);\r\n          }}\r\n        />\r\n        <div className=\"player-info\">\r\n          {!stats ? (\r\n            <div className=\"info-name-logo-container\">\r\n              <h2>{`${player.first_name} ${player.last_name}`}</h2>\r\n              <Icon />\r\n            </div>\r\n          ) : (\r\n            <h2>{`${player.first_name} ${player.last_name}`}</h2>\r\n          )}\r\n          <span>\r\n            {player.team.city} {player.team.name}\r\n          </span>\r\n          {stats && (\r\n            <>\r\n              <span>{mapPosition(player.position)}</span>\r\n              <span>\r\n                {player.height_feet}' {player.height_inches}\"\r\n              </span>\r\n            </>\r\n          )}\r\n        </div>\r\n        {stats ? (\r\n          <>\r\n            <div className=\"icon\">\r\n              <Icon />\r\n            </div>\r\n            <Doughnut\r\n              data={data()}\r\n              options={options}\r\n              legend={{ display: false }}\r\n            />\r\n          </>\r\n        ) : (\r\n          <div className=\"didnt-play\">\r\n            {`${player.first_name} ${player.last_name}`} hasn't played this\r\n            season.\r\n          </div>\r\n        )}\r\n      </div>\r\n    </Col>\r\n  );\r\n};\r\n\r\nconst mapStatetoProps = (_, ownProps) => ({\r\n  player: ownProps.player,\r\n  stats: ownProps.stats,\r\n  isOffenseStats: ownProps.isOffenseStats,\r\n});\r\n\r\nconst mapDispatchtoProps = {\r\n  removePlayer: removePlayer,\r\n  removePlayerStats: removePlayerStats,\r\n};\r\n\r\nDoughNutCard = connect(mapStatetoProps, mapDispatchtoProps)(DoughNutCard);\r\nexport default DoughNutCard;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { generateSearchString, getStats } from \"./pageHelpers\";\r\n\r\nimport Button from \"react-bootstrap/Button\";\r\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\r\nimport DoughnutCard from \"./charts/doughnutCard\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport { connect } from \"react-redux\";\r\nimport { getSeasonAverages } from \"../../actions/statsActions\";\r\n\r\nlet RadarTab = ({ players, getSeasonAverages, seasonAverages }) => {\r\n  const [shootingStats, setShootingStats] = useState(\"ft\");\r\n\r\n  useEffect(() => {\r\n    const searchString = generateSearchString(players);\r\n    getSeasonAverages(searchString);\r\n  }, [JSON.stringify(players)]);\r\n\r\n  return (\r\n    <>\r\n      <div id=\"radar-btn-container\">\r\n        <ButtonGroup size=\"lg\">\r\n          <Button\r\n            onClick={() => setShootingStats(\"ft\")}\r\n            variant={`${\r\n              shootingStats === \"ft\" ? \"primary\" : \"outline-primary\"\r\n            }`}\r\n          >\r\n            Free Throw %\r\n          </Button>\r\n          <Button\r\n            onClick={() => setShootingStats(\"fg\")}\r\n            variant={`${\r\n              shootingStats === \"fg\" ? \"primary\" : \"outline-primary\"\r\n            }`}\r\n          >\r\n            Field Goal %\r\n          </Button>\r\n          <Button\r\n            onClick={() => setShootingStats(\"fg3\")}\r\n            variant={`${\r\n              shootingStats === \"fg3\" ? \"primary\" : \"outline-primary\"\r\n            }`}\r\n          >\r\n            3 Point %\r\n          </Button>\r\n        </ButtonGroup>\r\n        <span className=\"season-astrisk\">\r\n          *All stats are from the 2020-2021 season\r\n        </span>\r\n      </div>\r\n      <Row>\r\n        {seasonAverages &&\r\n          players.map((player, i) => (\r\n            <DoughnutCard\r\n              player={player}\r\n              key={`pie-card-${i}`}\r\n              stats={getStats(player.id, seasonAverages)}\r\n              shootingStats={shootingStats}\r\n            />\r\n          ))}\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStatetoProps = (state) => ({\r\n  players: state.players.data,\r\n  seasonAverages: state.stats.seasonAverages,\r\n});\r\n\r\nconst mapDispatchtoProps = {\r\n  getSeasonAverages: getSeasonAverages,\r\n};\r\n\r\nRadarTab = connect(mapStatetoProps, mapDispatchtoProps)(RadarTab);\r\nexport default RadarTab;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getPlayer } from \"../../actions/playerActions\";\r\nimport { getPlayers } from \"../../actions/searchActions\";\r\n\r\nlet SearchBar = ({ displayCount, getPlayer, getPlayers, players }) => (\r\n  <div id=\"search-bar\">\r\n    <input\r\n      id=\"search-input\"\r\n      placeholder=\"Search for Player (ex: Lebron james)\"\r\n      onChange={(e) => getPlayers(e.target.value, displayCount)}\r\n    />\r\n    {players && (\r\n      <ul>\r\n        {players.map((player, i) => (\r\n          <li\r\n            onClick={() => {\r\n              getPlayer(player.id);\r\n              document.getElementById(\"search-input\").value = \"\";\r\n            }}\r\n            key={`player-${i}`}\r\n          >{`${player.first_name} ${player.last_name} - ${player.team.abbreviation}`}</li>\r\n        ))}\r\n      </ul>\r\n    )}\r\n  </div>\r\n);\r\n\r\nconst mapDispatchToProps = {\r\n  getPlayer: getPlayer,\r\n  getPlayers: getPlayers,\r\n};\r\n\r\nconst mapStatetoProps = (state, ownProps) => ({\r\n  players: state.search.players,\r\n  displayCount: ownProps.displayCount,\r\n});\r\n\r\nSearchBar = connect(mapStatetoProps, mapDispatchToProps)(SearchBar);\r\nexport default SearchBar;\r\n","export const getPlayers = (value, paginationCount) => ({\r\n  type: \"GET_PLAYERS\",\r\n  value,\r\n  paginationCount,\r\n});\r\n","import { getMainColor, getSecondaryColor } from \"nba-color\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { faTimesCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { removePlayer } from \"../../actions/playerActions\";\r\nimport { removePlayerStats } from \"../../actions/statsActions\";\r\n\r\nlet SearchedPlayerPill = ({ player, removePlayer }) => {\r\n  const primary = getMainColor(player.team.abbreviation).hex;\r\n  const secondary = getSecondaryColor(player.team.abbreviation).hex;\r\n\r\n  return (\r\n    <div\r\n      className=\"player-pill\"\r\n      style={{\r\n        backgroundColor: primary,\r\n        color: secondary,\r\n      }}\r\n      onClick={() => {\r\n        removePlayer(player.id);\r\n        removePlayerStats(player.id);\r\n      }}\r\n    >\r\n      {`${player.first_name} ${player.last_name}`}\r\n      <span\r\n        style={{\r\n          color: secondary,\r\n        }}\r\n      >\r\n        <FontAwesomeIcon icon={faTimesCircle} />\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStatetoProps = (_, ownProps) => ({\r\n  player: ownProps.player,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  removePlayer: removePlayer,\r\n  removePlayerStats: removePlayerStats,\r\n};\r\n\r\nSearchedPlayerPill = connect(\r\n  mapStatetoProps,\r\n  mapDispatchToProps\r\n)(SearchedPlayerPill);\r\nexport default SearchedPlayerPill;\r\n","import React from \"react\";\r\nimport SearchBar from \"../search/searchBar\";\r\nimport SearchedPlayerPill from \"./searchedPlayerPill\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet Header = ({ players }) => (\r\n  <div id=\"header\">\r\n    <h1>NBA COMPARE</h1>\r\n    <div id=\"search-container\">\r\n      {players.map((player, i) => (\r\n        <SearchedPlayerPill key={`player-pill-${i}`} player={player} />\r\n      ))}\r\n      <SearchBar displayCount={10} />\r\n    </div>\r\n  </div>\r\n);\r\n\r\nconst mapStatetoProps = (state) => ({\r\n  players: state.players.data,\r\n});\r\n\r\nHeader = connect(mapStatetoProps, null)(Header);\r\nexport default Header;\r\n","import Col from \"react-bootstrap/Col\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport React from \"react\";\r\nimport color from \"rcolor\";\r\nimport { getStats } from \"../pageHelpers\";\r\nimport { mapStatsLabel } from \"../pageHelpers\";\r\n\r\nlet LineCard = ({ players, stats, stat }) => {\r\n  const data = () => {\r\n    const labels = [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\"];\r\n    const datasets = players.map((player) => {\r\n      const label = `${player.first_name} ${player.last_name}`;\r\n      const data = getStats(player.id, stats).games.map((game) => game[stat]);\r\n      const lineColor = color();\r\n\r\n      return {\r\n        label,\r\n        data,\r\n        fill: false,\r\n        backgroundColor: lineColor,\r\n        borderColor: lineColor,\r\n      };\r\n    });\r\n\r\n    return {\r\n      labels,\r\n      datasets,\r\n    };\r\n  };\r\n\r\n  const options = {\r\n    tooltips: {\r\n      callbacks: {\r\n        title: () => {\r\n          return mapStatsLabel(stat);\r\n        },\r\n        label: (tooltipItem, data) => {\r\n          return `${data.datasets[tooltipItem.datasetIndex].label}: ${\r\n            data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index]\r\n          }${stat.slice(stat.length - 3) === \"pct\" ? \"%\" : \"\"}`;\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <Col xs={12}>\r\n      <Line data={data()} options={options} />\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport default LineCard;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  clearLastTenStats,\r\n  getLastTenGamesStats,\r\n} from \"../../actions/statsActions\";\r\nimport { mapStatsLabel, statsSelectDropdownArr } from \"./pageHelpers\";\r\n\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\r\nimport LineCard from \"./charts/lineCard\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet LineTab = ({\r\n  clearLastTenStats,\r\n  players,\r\n  getLastTenGamesStats,\r\n  lastTen,\r\n}) => {\r\n  const [stat, setStat] = useState(\"pts\");\r\n\r\n  useEffect(() => {\r\n    clearLastTenStats();\r\n    players.forEach((player) => {\r\n      getLastTenGamesStats(player);\r\n    });\r\n  }, [JSON.stringify(players)]);\r\n\r\n  return (\r\n    <>\r\n      <div id=\"radar-btn-container\">\r\n        <DropdownButton id=\"dropdown-basic-button\" title={mapStatsLabel(stat)}>\r\n          {statsSelectDropdownArr.map((statEl, i) => (\r\n            <Dropdown.Item\r\n              key={`stat-dropdown-${i}`}\r\n              onClick={() => setStat(statEl)}\r\n            >\r\n              {mapStatsLabel(statEl)}\r\n            </Dropdown.Item>\r\n          ))}\r\n        </DropdownButton>\r\n        <span className=\"season-astrisk\">\r\n          *All stats are from the 2020-2021 season\r\n        </span>\r\n      </div>\r\n      {lastTen.length === players.length && (\r\n        <LineCard players={players} stats={lastTen} stat={stat} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStatetoProps = (state) => ({\r\n  players: state.players.data,\r\n  lastTen: state.stats.lastTen,\r\n});\r\n\r\nconst mapDispatchtoProps = {\r\n  getLastTenGamesStats: getLastTenGamesStats,\r\n  clearLastTenStats: clearLastTenStats,\r\n};\r\n\r\nLineTab = connect(mapStatetoProps, mapDispatchtoProps)(LineTab);\r\nexport default LineTab;\r\n","import * as NBAIcons from \"react-nba-logos\";\r\n\r\nimport Col from \"react-bootstrap/Col\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Radar } from \"react-chartjs-2\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { faTimesCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { getMainColor } from \"nba-color\";\r\nimport { removePlayer } from \"../../../actions/playerActions\";\r\nimport { removePlayerStats } from \"../../../actions/statsActions\";\r\n\r\nlet RadarCard = ({ player, stats, isOffenseStats, removePlayer }) => {\r\n  const Icon = NBAIcons[player.team.abbreviation];\r\n\r\n  const data = () => {\r\n    const color = getMainColor(player.team.abbreviation).rgb;\r\n    const backgroundColor = `rgba(${color[0]}, ${color[1]}, ${color[2]}, 0.3)`;\r\n    const borderColor = `rgba(${color[0]}, ${color[1]}, ${color[2]}, 1)`;\r\n    const { ast, blk, fg_pct, fg3_pct, ft_pct, reb, stl, turnover } = stats;\r\n    const labels = isOffenseStats\r\n      ? [\"Field Goal %\", \"3 Point %\", \"Free Throw %\"]\r\n      : [\"Assists\", \"Blocks\", \"Rebounds\", \"Steals\", \"Turnovers\"];\r\n    const data = isOffenseStats\r\n      ? [fg_pct * 100, fg3_pct * 100, ft_pct * 100]\r\n      : [ast, blk, reb, stl, turnover];\r\n\r\n    return {\r\n      labels,\r\n      datasets: [\r\n        {\r\n          data,\r\n          backgroundColor,\r\n          borderColor,\r\n          borderWidth: 1,\r\n        },\r\n      ],\r\n    };\r\n  };\r\n\r\n  const options = {\r\n    scale: {\r\n      ticks: { beginAtZero: true },\r\n    },\r\n    tooltips: {\r\n      callbacks: {\r\n        title: () => {},\r\n        label: (tooltipItem, data) => {\r\n          const label = data.labels[tooltipItem.index];\r\n          data = data.datasets[0].data[tooltipItem.index];\r\n\r\n          if (isOffenseStats) {\r\n            return `${label}: ${Math.round(data)}%`;\r\n          } else {\r\n            return `${label}: ${data}`;\r\n          }\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  const mapPosition = (position) => {\r\n    switch (position[0]) {\r\n      case \"C\":\r\n        return \"Center\";\r\n      case \"F\":\r\n        return \"Forward\";\r\n      case \"G\":\r\n        return \"Guard\";\r\n      default:\r\n        return position;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Col xs={12} md={6}>\r\n      <div className=\"div\" className={`radar-card ${!stats ? \"no-stats\" : \"\"}`}>\r\n        <FontAwesomeIcon\r\n          icon={faTimesCircle}\r\n          onClick={() => {\r\n            removePlayer(player.id);\r\n            removePlayerStats(player.id);\r\n          }}\r\n        />\r\n        <div className=\"player-info\">\r\n          <div className=\"info-name-logo-container\">\r\n            <h2>{`${player.first_name} ${player.last_name}`}</h2>\r\n            <Icon />\r\n          </div>\r\n          <span>\r\n            {player.team.city} {player.team.name}\r\n          </span>\r\n          {stats && (\r\n            <>\r\n              <span>{mapPosition(player.position)}</span>\r\n              <span>\r\n                {player.height_feet}' {player.height_inches}\"\r\n              </span>\r\n            </>\r\n          )}\r\n        </div>\r\n        {stats ? (\r\n          <Radar data={data()} options={options} legend={{ display: false }} />\r\n        ) : (\r\n          <div className=\"didnt-play\">\r\n            {`${player.first_name} ${player.last_name}`} hasn't played this\r\n            season.\r\n          </div>\r\n        )}\r\n      </div>\r\n    </Col>\r\n  );\r\n};\r\n\r\nconst mapStatetoProps = (_, ownProps) => ({\r\n  player: ownProps.player,\r\n  stats: ownProps.stats,\r\n  isOffenseStats: ownProps.isOffenseStats,\r\n});\r\n\r\nconst mapDispatchtoProps = {\r\n  removePlayer: removePlayer,\r\n  removePlayerStats: removePlayerStats,\r\n};\r\n\r\nRadarCard = connect(mapStatetoProps, mapDispatchtoProps)(RadarCard);\r\nexport default RadarCard;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { generateSearchString, getStats } from \"./pageHelpers\";\r\n\r\nimport Button from \"react-bootstrap/Button\";\r\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\r\nimport RadarCard from \"./charts/radarCard\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport { connect } from \"react-redux\";\r\nimport { getSeasonAverages } from \"../../actions/statsActions\";\r\n\r\nlet RadarTab = ({ players, getSeasonAverages, seasonAverages }) => {\r\n  const [isOffenseStats, setIsOffenseStats] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const searchString = generateSearchString(players);\r\n    getSeasonAverages(searchString);\r\n  }, [JSON.stringify(players)]);\r\n\r\n  return (\r\n    <>\r\n      <div id=\"radar-btn-container\">\r\n        <ButtonGroup size=\"lg\">\r\n          <Button\r\n            onClick={() => setIsOffenseStats(true)}\r\n            variant={`${isOffenseStats ? \"primary\" : \"outline-primary\"}`}\r\n          >\r\n            Offensive Stats\r\n          </Button>\r\n          <Button\r\n            onClick={() => setIsOffenseStats(false)}\r\n            variant={`${!isOffenseStats ? \"primary\" : \"outline-primary\"}`}\r\n          >\r\n            Defensive Stats\r\n          </Button>\r\n        </ButtonGroup>\r\n        <span className=\"season-astrisk\">\r\n          *All stats are from the 2020-2021 season\r\n        </span>\r\n      </div>\r\n      <Row>\r\n        {seasonAverages &&\r\n          players.map((player, i) => (\r\n            <RadarCard\r\n              player={player}\r\n              key={`radar-card-${i}`}\r\n              stats={getStats(player.id, seasonAverages)}\r\n              isOffenseStats={isOffenseStats}\r\n            />\r\n          ))}\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStatetoProps = (state) => ({\r\n  players: state.players.data,\r\n  seasonAverages: state.stats.seasonAverages,\r\n});\r\n\r\nconst mapDispatchtoProps = {\r\n  getSeasonAverages: getSeasonAverages,\r\n};\r\n\r\nRadarTab = connect(mapStatetoProps, mapDispatchtoProps)(RadarTab);\r\nexport default RadarTab;\r\n","import React, { useState } from \"react\";\r\n\r\nimport Button from \"react-bootstrap/Button\";\r\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport DoughNutTab from \"./doughnutTab\";\r\nimport Header from \"./header\";\r\nimport LineTab from \"./lineTab\";\r\nimport RadarTab from \"./radarTab\";\r\n\r\nlet ChartsPage = () => {\r\n  const [currentPage, setPage] = useState(1);\r\n\r\n  const getPage = () => {\r\n    switch (currentPage) {\r\n      case 1:\r\n        return <RadarTab />;\r\n      case 2:\r\n        return <DoughNutTab />;\r\n      case 3:\r\n        return <LineTab />;\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Container>\r\n        <ButtonGroup id=\"nav-container\" size=\"lg\">\r\n          <Button\r\n            onClick={() => setPage(1)}\r\n            variant={`${currentPage === 1 ? \"primary\" : \"outline-primary\"}`}\r\n          >\r\n            Off/Def\r\n          </Button>\r\n          <Button\r\n            onClick={() => setPage(2)}\r\n            variant={`${currentPage === 2 ? \"primary\" : \"outline-primary\"}`}\r\n          >\r\n            Shooting %\r\n          </Button>\r\n          <Button\r\n            onClick={() => setPage(3)}\r\n            variant={`${currentPage === 3 ? \"primary\" : \"outline-primary\"}`}\r\n          >\r\n            Last 10 Games\r\n          </Button>\r\n        </ButtonGroup>\r\n      </Container>\r\n      <Container className=\"panel\" fluid=\"lg\">\r\n        {getPage()}\r\n      </Container>\r\n      <footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChartsPage;\r\n","import ChartsPage from \"./chartsPage/chartsPage\";\r\nimport React from \"react\";\r\nimport Search from \"./search/searchBar\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet App = ({ players }) => (\r\n  <div className=\"App\">\r\n    {players.length === 0 && (\r\n      <div id=\"search-only-container\">\r\n        <h1>NBA COMPARE</h1>\r\n        <Search displayCount={25} />\r\n      </div>\r\n    )}\r\n    {players.length !== 0 && <ChartsPage />}\r\n  </div>\r\n);\r\n\r\nconst mapStatetoProps = (state) => ({\r\n  players: state.players.data,\r\n});\r\n\r\nApp = connect(mapStatetoProps, null)(App);\r\nexport default App;\r\n","const orderById = (arr) => {\r\n  return arr.sort((a, b) => {\r\n    return a.id - b.id;\r\n  });\r\n};\r\n\r\nexport default orderById;\r\n","import orderById from \"./orderByHelper\";\r\n\r\nconst initialState = {\r\n  data: [\r\n    {\r\n      id: 54,\r\n      first_name: \"Bojan\",\r\n      height_feet: 6,\r\n      height_inches: 8,\r\n      last_name: \"Bogdanovic\",\r\n      position: \"F\",\r\n      team: {\r\n        id: 29,\r\n        abbreviation: \"UTA\",\r\n        city: \"Utah\",\r\n        conference: \"West\",\r\n        division: \"Northwest\",\r\n        full_name: \"Utah Jazz\",\r\n        name: \"Jazz\",\r\n      },\r\n      weight_pounds: 216,\r\n    },\r\n    {\r\n      id: 237,\r\n      first_name: \"LeBron\",\r\n      height_feet: 6,\r\n      height_inches: 8,\r\n      last_name: \"James\",\r\n      position: \"F\",\r\n      team: {\r\n        abbreviation: \"LAL\",\r\n        city: \"Los Angeles\",\r\n        conference: \"West\",\r\n        division: \"Pacific\",\r\n        full_name: \"Los Angeles Lakers\",\r\n        id: 14,\r\n        name: \"Lakers\",\r\n      },\r\n      weight_pounds: 250,\r\n    },\r\n    {\r\n      id: 267,\r\n      first_name: \"Jeremy\",\r\n      height_feet: 6,\r\n      height_inches: 5,\r\n      last_name: \"Lamb\",\r\n      position: \"G\",\r\n      team: {\r\n        abbreviation: \"IND\",\r\n        city: \"Indiana\",\r\n        conference: \"East\",\r\n        division: \"Central\",\r\n        full_name: \"Indiana Pacers\",\r\n        id: 12,\r\n        name: \"Pacers\",\r\n      },\r\n      weight_pounds: 185,\r\n    },\r\n  ],\r\n};\r\n\r\nconst PlayerReducer = (state = initialState, action) => {\r\n  let newData;\r\n\r\n  switch (action.type) {\r\n    case \"GET_PLAYER\":\r\n      return { ...state, loading: true };\r\n    case \"RECIEVE_PLAYER\":\r\n      return {\r\n        ...state,\r\n        data: orderById([...state.data, action.json]),\r\n        loading: false,\r\n      };\r\n    case \"REMOVE_PLAYER\":\r\n      newData = state.data.filter((player) => player.id !== action.id);\r\n      return { ...state, data: newData, loading: false };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default PlayerReducer;\r\n","const SearchReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case \"GET_PLAYERS\":\r\n      return { ...state, loading: true };\r\n    case \"RECIEVE_PLAYERS\":\r\n      return { ...state, players: action.json, loading: false };\r\n    case \"CLEAR_SEARCH\":\r\n      return { ...state, players: null, loading: false };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default SearchReducer;\r\n","import orderById from \"./orderByHelper\";\r\n\r\nconst StatsReducer = (state = { lastTen: [] }, action) => {\r\n  switch (action.type) {\r\n    case \"GET_SEASON_AVERAGES\":\r\n      return { ...state, loading: true };\r\n    case \"RECIEVE_SEASON_AVERAGES\":\r\n      return {\r\n        ...state,\r\n        seasonAverages: orderById(action.data),\r\n        loading: false,\r\n      };\r\n    case \"CLEAR_LAST_TEN_STATS\":\r\n      return { ...state, lastTen: [], loading: false };\r\n    case \"RECIEVE_LAST_TEN_STATS\":\r\n      return {\r\n        ...state,\r\n        lastTen: [...state.lastTen, action.lastTen],\r\n        loading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default StatsReducer;\r\n","import { combineReducers } from \"@reduxjs/toolkit\";\r\nimport players from \"./playerReducer\";\r\nimport search from \"./searchReducer\";\r\nimport stats from \"./statsReducer\";\r\n\r\nconst RootReducer = combineReducers({\r\n  players,\r\n  search,\r\n  stats,\r\n});\r\n\r\nexport default RootReducer;\r\n","import { put, takeLatest } from \"redux-saga/effects\";\r\n\r\nfunction* fetchPlayer({ id }) {\r\n  const json = yield fetch(\r\n    `https://www.balldontlie.io/api/v1/players/${id}`\r\n  ).then((response) => response.json());\r\n\r\n  yield put({\r\n    type: \"RECIEVE_PLAYER\",\r\n    json: json,\r\n  });\r\n\r\n  yield put({\r\n    type: \"CLEAR_SEARCH\",\r\n  });\r\n}\r\n\r\nfunction* actionWatcher() {\r\n  yield takeLatest(\"GET_PLAYER\", fetchPlayer);\r\n}\r\n\r\nexport default actionWatcher;\r\n","import { put, takeLatest } from \"redux-saga/effects\";\r\n\r\nfunction* fetchPlayers({ value, paginationCount }) {\r\n  const json =\r\n    value === \"\"\r\n      ? { data: undefined }\r\n      : yield fetch(\r\n          `https://www.balldontlie.io/api/v1/players?per_page=${paginationCount}&search=${value}`\r\n        ).then((response) => response.json());\r\n\r\n  yield put({\r\n    type: \"RECIEVE_PLAYERS\",\r\n    json: json.data,\r\n  });\r\n}\r\n\r\nfunction* actionWatcher() {\r\n  yield takeLatest(\"GET_PLAYERS\", fetchPlayers);\r\n}\r\n\r\nexport default actionWatcher;\r\n","import { put, takeEvery, takeLatest } from \"redux-saga/effects\";\r\n\r\nfunction* fetchAverages({ searchString }) {\r\n  const json = yield fetch(\r\n    `https://www.balldontlie.io/api/v1/season_averages?season=2020${searchString}`\r\n  ).then((response) => response.json());\r\n\r\n  yield put({\r\n    type: \"RECIEVE_SEASON_AVERAGES\",\r\n    data: json.data,\r\n  });\r\n}\r\n\r\nfunction* fetchLastTenStats({ player }) {\r\n  let games = yield fetch(\r\n    `https://www.balldontlie.io/api/v1/stats?seasons[]=2020&player_ids[]=${player.id}&per_page=72`\r\n  )\r\n    .then((response) => response.json())\r\n    .then((response) => response.data);\r\n\r\n  games = orderGamesByDate(games);\r\n\r\n  if (games.length > 10) {\r\n    games = games.slice(games.length - 10);\r\n  }\r\n\r\n  yield put({\r\n    type: \"RECIEVE_LAST_TEN_STATS\",\r\n    lastTen: {\r\n      player_id: player.id,\r\n      games,\r\n    },\r\n  });\r\n}\r\n\r\nconst orderGamesByDate = (games) => {\r\n  return games.sort((a, b) => {\r\n    return new Date(a.game.date) - new Date(b.game.date);\r\n  });\r\n};\r\n\r\nfunction* actionWatcher() {\r\n  yield takeLatest(\"GET_SEASON_AVERAGES\", fetchAverages);\r\n  yield takeEvery(\"GET_LAST_TEN_STATS\", fetchLastTenStats);\r\n}\r\n\r\nexport default actionWatcher;\r\n","import PlayerActionWatcher from \"./player\";\r\nimport SearchActionWatcher from \"./search\";\r\nimport StatsActionWatcher from \"./stats\";\r\nimport { all } from \"redux-saga/effects\";\r\n\r\nexport default function* rootSaga() {\r\n  yield all([SearchActionWatcher(), PlayerActionWatcher(), StatsActionWatcher()]);\r\n}\r\n","import \"./styles/index.scss\";\r\n\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nimport { applyMiddleware, createStore } from \"@reduxjs/toolkit\";\r\n\r\nimport App from \"./components/App.jsx\";\r\nimport { Provider } from \"react-redux\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport RootReducer from \"./reducers/root\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport rootSaga from \"./sagas/root\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst store = createStore(RootReducer, applyMiddleware(sagaMiddleware));\r\nwindow.store = store;\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}